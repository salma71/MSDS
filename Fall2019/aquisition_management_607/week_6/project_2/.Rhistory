facet_wrap(~ destination_country) +
theme_light()
best_3 <- merged_age%>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey") & year %in% c("2019") & age != 0) %>%
select(destination_country, age, total_population, year)%>%
arrange(desc(total_population))
best_3
ggplot(best_3, aes(x=factor(age), y=factor(total_population), group = age)) +
geom_col(aes(fill = age), position = "dodge", stat_count(geom="bar")) +
geom_text(aes(label = total_population)) +
labs(title="Migrant age-categories distribution in 2019",
subtitle="Top migrats age-categories for the top 3 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~ destination_country) +
theme_light()
best_3 <- merged_age%>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey") & year %in% c("2019") & age != 0) %>%
select(destination_country, age, total_population, year)%>%
arrange(desc(total_population))
best_3
ggplot(best_3, aes(x=factor(age), y=factor(total_population), group = age)) +
geom_col(aes(fill = age), position = "dodge", stat = "identity") +
geom_text(aes(label = ...total_population...)) +
labs(title="Migrant age-categories distribution in 2019",
subtitle="Top migrats age-categories for the top 3 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~ destination_country) +
theme_light()
devtools::install_github("cardiomoon/editData")
best_3 <- merged_age%>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey") & year %in% c("2019") & age != 0) %>%
select(destination_country, age, total_population, year)%>%
arrange(desc(total_population))
best_3
ggplot(best_3, aes(x=age, y=total_population, group = age)) +
geom_col(aes(fill = age), position = "dodge", stat = "identity") +
labs(title="Migrant age-categories distribution in 2019",
subtitle="Top migrats age-categories for the top 3 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~ destination_country) +
theme_light()
devtools::install_github("cardiomoon/ggplotAssist")
library(ggplot2)
best_3 <- merged_age%>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey") & year %in% c("2019") & age != 0) %>%
select(destination_country, age, total_population, year)%>%
arrange(desc(total_population))
best_3
ggplot(best_3, aes(x=age, y=total_population, group = age)) +
geom_col(aes(fill = age), position = "dodge", stat = "identity") +
labs(title="Migrant age-categories distribution in 2019",
subtitle="Top migrats age-categories for the top 3 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~ destination_country) +
theme_light()
result <- ggplotAssist(best_3)
install.packages("ggplotAssist")
ggplotAssist:::ggplotAssist()
exit
library(readr)
UN_Refugee_df <- read_csv("UN_MigrantStockTotal_2019/Table 6-Table 1.csv",
skip = 15)
UN_Refugee_df
library(readr)
UN_Refugee_df <- read_csv("UN_MigrantStockTotal_2019/Table 6-Table 1.csv",
skip = 15)
UN_Refugee_df
ggplotAssist:::ggplotAssist()
ggplotAssist:::ggplotAssist()
refugee_country_df <- filter(UN_Refugee_df ,!is.na(X5))
refugee_country_df
refugee_country_df <- filter(UN_Refugee_df ,!is.na(X5))
refugee_country_df
refugee_country_df <- filter(UN_Refugee_df ,!is.na(X5))
refugee_country_df
dim(refugee_country_df)
refugee_country_df <- filter(UN_Refugee_df ,!is.na(X5))
dim(refugee_country_df)
refugee_country_df
refugee_df <- refugee_country_df %>%
select(-X1,-c(3:5))
dim(refugee_df)
refugee_df
#Use select function to fetch only the data that we interested by picking the colnames - both males, and females
estimate_refugee_df <- refugee_df %>%
select(c("X2":"2019"))
dim(estimate_refugee_df)
estimate_refugee_df
num_est_refugee <- estimate_refugee_rename
estimate_refugee_rename <- estimate_refugee_df %>%
rename(
destination_country = X2,
)
estimate_refugee_rename
num_est_refugee <- estimate_refugee_rename
num_est_refugee$`1990` <- parse_number(num_est_refugee$`1990`)
num_est_refugee$`1995` <- parse_number(num_est_refugee$`1995`)
num_est_refugee$`2000` <- parse_number(num_est_refugee$`2000`)
num_est_refugee$`2005` <- parse_number(num_est_refugee$`2005`)
num_est_refugee$`2010` <- parse_number(num_est_refugee$`2010`)
num_est_refugee$`2015` <- parse_number(num_est_refugee$`2015`)
num_est_refugee$`2019` <- parse_number(num_est_refugee$`2019`)
str(num_est_refugee)
#age_category <- both_sex_rename %>%
#  summarise(child = sum(c(3:6)))
num_est_refugee <- estimate_refugee_rename
num_est_refugee$`1990` <- parse_number(num_est_refugee$`1990`)
num_est_refugee$`1995` <- parse_number(num_est_refugee$`1995`)
num_est_refugee$`2000` <- parse_number(num_est_refugee$`2000`)
num_est_refugee$`2005` <- parse_number(num_est_refugee$`2005`)
num_est_refugee$`2010` <- parse_number(num_est_refugee$`2010`)
num_est_refugee$`2015` <- parse_number(num_est_refugee$`2015`)
num_est_refugee$`2019` <- parse_number(num_est_refugee$`2019`)
num_est_refugee
by_refugee_pop <- num_est_refugee%>%
gather(year, total_estimates, c(2:8)) %>%
arrange(desc(total_estimates))
by_refugee_pop
# gather() by year into total_estimates - gather columns 2 (1990) : 8(2019) then arrange desc
by_refugee_pop <- num_est_refugee%>%
gather(year, total_estimates, c(2:8)) %>%
arrange(desc(total_estimates))
dim(by_refugee_pop)
by_refugee_pop
Refugee_estimates <- write.table(by_refugee_pop, file = "refugeeEstimates.csv", row.names = FALSE, na="", col.names = TRUE, sep = ",")
file_test("-f", "~/Desktop/MSDS_2019/Fall2019/aquisition&management_607/week_6/project_2/refugeeEstimates.csv")
refugeeEstimates <- read.csv(file = "refugeeEstimates.csv", header = TRUE, sep = ",")
refugeeEstimates
by_summary <- by_refugee_pop%>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey", "India") & year %in% c(2010, 2015,2019) & total_estimates != 0)
by_summary
ggplot(by_summary, aes(x = destination_country, y = total_estimates, fill = destination_country)) +
geom_bar(stat = "identity",
width = 1) +
geom_text(aes(label = total_estimates),
hjust = .5,
color = "black",
size = 3.5) +
labs(title="Migrant estimates for top 3 destinations",
subtitle="How much migrants the top three destination countries can accept per year interval") +
theme_light() +
facet_wrap(~ year)
#
by_summary <- by_refugee_pop%>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey", "India") & year %in% c(2010, 2015,2019) & total_estimates != 0)
by_summary
ggplot(by_summary, aes(x = destination_country, y = total_estimates, fill = destination_country)) +
geom_bar(stat = "identity",
width = 1) +
geom_text(aes(label = total_estimates),
hjust = .5,
color = "black",
size = 3.5) +
labs(title="Migrant estimates for top 4 destinations",
subtitle="How much migrants the top three destination countries can accept per year interval") +
theme_light() +
facet_wrap(~ year)
# filter by year, destination, total estimates is not equal to 0
by_summary <- by_refugee_pop%>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey") & year %in% c(2010, 2015,2019) & total_estimates != 0)
by_summary
ggplot(by_summary, aes(x = destination_country, y = total_estimates, fill = destination_country)) +
geom_bar(stat = "identity",
width = 1) +
geom_text(aes(label = total_estimates),
hjust = .5,
color = "black",
size = 3.5) +
labs(title="Refugee estimates for top 3 destinations",
subtitle="How much refugees the top three destinations can accept per year interval") +
theme_light() +
facet_wrap(~ year)
# filter by year, destination, total estimates is not equal to 0
by_summary <- by_refugee_pop%>%
filter(destination_country %in% c("United States of America", "Turkey", "United Arab Emirates", ) & year %in% c(2010, 2015,2019) & total_estimates != 0)
# filter by year, destination, total estimates is not equal to 0
by_summary <- by_refugee_pop%>%
filter(destination_country %in% c("United States of America", "Turkey", "United Arab Emirates" ) & year %in% c(2010, 2015,2019) & total_estimates != 0)
by_summary
ggplot(by_summary, aes(x = destination_country, y = total_estimates, fill = destination_country)) +
geom_bar(stat = "identity",
width = 1) +
geom_text(aes(label = total_estimates),
hjust = .5,
color = "black",
size = 3.5) +
labs(title="Refugee estimates for top 3 destinations",
subtitle="How much refugees the top three destinations can accept per year interval") +
theme_light() +
facet_wrap(~ year)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(janitor)
library(tidyr)
library(ggmap)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(janitor)
library(tidyr)
library(ggmap)
library(ggplot2)
library(RCurl)
url <- 'https://raw.githubusercontent.com/salma71/MSDS_2019/master/Fall2019/aquisition%26management_607/week_6/project_2/migrantByOriginDestination.csv'
# reading the url as a dataframe
by_origin_destination <- read.csv(url, header = FALSE, stringsAsFactors = FALSE)
head(by_origin_destination)
url <- 'https://raw.githubusercontent.com/salma71/MSDS_2019/master/Fall2019/aquisition%26management_607/week_6/project_2/migrantByOriginDestination.csv'
# reading the url as a dataframe
by_origin_destination <- read.csv(url, header = TRUE, stringsAsFactors = FALSE)
head(by_origin_destination)
url <- 'https://raw.githubusercontent.com/salma71/MSDS_2019/master/Fall2019/aquisition%26management_607/week_6/project_2/migrantByAge.csv'
# reading the url as a dataframe
by_age_bothsex <- read.csv(url, header = TRUE, stringsAsFactors = FALSE)
head(by_age_bothsex)
url <- 'https://raw.githubusercontent.com/salma71/MSDS_2019/master/Fall2019/aquisition%26management_607/week_6/project_2/refugeeEstimates.csv'
# reading the url as a dataframe
ref_estimates <- read.csv(url, header = TRUE, stringsAsFactors = FALSE)
head(ref_estimates)
# filter by year, destination, total estimates is not equal to 0
by_summary <- by_refugee_pop%>%
filter(destination_country %in% c("United States of America", "Turkey", "United Arab Emirates" ) & year %in% c(2010, 2015,2019) & total_estimates != 0)
by_summary
ggplot(by_summary, aes(x = destination_country, y = total_estimates, fill = destination_country)) +
geom_bar(stat = "identity",
width = 1) +
geom_text(aes(label = total_estimates),
hjust = .5,
color = "black",
size = 3.5) +
labs(title="Refugee estimates for top 3 destinations",
subtitle="How much refugees the top three destinations can accept per year interval") +
theme_light() +
facet_wrap(~ year)
# filter by year, destination, total estimates is not equal to 0
by_summary <- by_refugee_pop%>%
filter(destination_country %in% c("United States of America", "Turkey", "United Arab Emirates" ) & year %in% c(2010, 2015,2019) & total_estimates != 0)
by_summary
ggplot(by_summary, aes(x = destination_country, y = total_estimates, fill = destination_country)) +
geom_bar(stat = "identity",
width = 1) +
geom_text(aes(label = total_estimates),
hjust = .5,
color = "black",
size = 3.5) +
labs(title="Refugee estimates for top 3 destinations",
subtitle="How much refugees the top three destinations can accept per year interval") +
theme_light(
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
facet_wrap(~ year)
# filter by year, destination, total estimates is not equal to 0
by_summary <- by_refugee_pop%>%
filter(destination_country %in% c("United States of America", "Turkey", "United Arab Emirates" ) & year %in% c(2010, 2015,2019) & total_estimates != 0)
by_summary
ggplot(by_summary, aes(x = destination_country, y = total_estimates, fill = destination_country)) +
geom_bar(stat = "identity",
width = 1) +
geom_text(aes(label = total_estimates),
hjust = .5,
color = "black",
size = 3.5) +
labs(title="Refugee estimates for top 3 destinations",
subtitle="How much refugees the top three destinations can accept per year interval") +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
facet_wrap(~ year)
# filter by year, destination, total estimates is not equal to 0
by_summary <- by_refugee_pop%>%
filter(destination_country %in% c("United States of America", "Turkey", "United Arab Emirates" ) & year %in% c(2010, 2015,2019) & total_estimates != 0)
by_summary
ggplot(by_summary, aes(x = destination_country, y = total_estimates, fill = destination_country)) +
geom_bar(stat = "identity",
width = 1) +
geom_text(aes(label = total_estimates),
hjust = .5,
color = "black",
size = 3.5) +
labs(title="Refugee estimates for top 3 destinations",
subtitle="How much refugees the top three destinations can accept per year interval") +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme_light() +
facet_wrap(~ year)
# filter by year, destination, total estimates is not equal to 0
by_summary <- by_refugee_pop%>%
filter(destination_country %in% c("United States of America", "Turkey", "United Arab Emirates" ) & year %in% c(2010, 2015,2019) & total_estimates != 0)
by_summary
ggplot(by_summary, aes(x = destination_country, y = total_estimates, fill = destination_country)) +
geom_bar(stat = "identity",
width = 1) +
geom_text(aes(label = total_estimates),
hjust = .5,
color = "black",
size = 3.5) +
labs(title="Refugee estimates for top 3 destinations",
subtitle="How much refugees the top three destinations can accept per year interval") +
theme_light(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
facet_wrap(~ year)
# filter by year, destination, total estimates is not equal to 0
by_summary <- by_refugee_pop%>%
filter(destination_country %in% c("United States of America", "Turkey", "United Arab Emirates" ) & year %in% c(2010, 2015,2019) & total_estimates != 0)
by_summary
ggplot(by_summary, aes(x = destination_country, y = total_estimates, fill = destination_country)) +
geom_bar(stat = "identity",
width = 1) +
geom_text(aes(label = total_estimates),
hjust = .5,
color = "black",
size = 3.5) +
labs(title="Refugee estimates for top 3 destinations",
subtitle="How much refugees the top three destinations can accept per year interval") +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
facet_wrap(~ year) +
theme_light()
# filter by year, destination, total estimates is not equal to 0
by_summary <- by_refugee_pop%>%
filter(destination_country %in% c("United States of America", "Turkey", "United Arab Emirates" ) & year %in% c(2010, 2015,2019) & total_estimates != 0)
by_summary
ggplot(by_summary, aes(x = destination_country, y = total_estimates, fill = destination_country)) +
geom_bar(stat = "identity",
width = 1) +
geom_text(aes(label = total_estimates),
hjust = .5,
color = "black",
size = 3.5) +
labs(title="Refugee estimates for top 3 destinations",
subtitle="How much refugees the top three destinations can accept per year interval") +
+ theme_bw() +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
facet_wrap(~ year)
# filter by year, destination, total estimates is not equal to 0
by_summary <- by_refugee_pop%>%
filter(destination_country %in% c("United States of America", "Turkey", "United Arab Emirates" ) & year %in% c(2010, 2015,2019) & total_estimates != 0)
by_summary
ggplot(by_summary, aes(x = destination_country, y = total_estimates, fill = destination_country)) +
geom_bar(stat = "identity",
width = 1) +
geom_text(aes(label = total_estimates),
hjust = .5,
color = "black",
size = 3.5) +
labs(title="Refugee estimates for top 3 destinations",
subtitle="How much refugees the top three destinations can accept per year interval") +
theme_bw() +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
facet_wrap(~ year)
#check how many youth
summary(by_age$total_population)
by_youth <- by_age%>%
filter(age %in% c("20-24", "25-29", "30-34", "35-39") & total_population >= 55709)%>%
select(year, destination_country, total_population)%>%
arrange(desc(total_population))
by_youth
theme_set(theme_classic())
ggplot(by_youth, aes(x=year, y=total_population)) +
geom_point(col="tomato2", size=3) +   # Draw points
geom_segment(aes(x=year,
xend=year,
y=min(total_population),
yend=max(total_population)),
linetype="dashed",
size=0.1) +   # Draw dashed lines
labs(title="Dot Plot",
subtitle="Youth population over the years",
caption="source: by_youth") +
coord_flip()
#replace NA <- 0
merged_age[is.na(merged_age)] <- 0
# filter the results to get only the non-zero values, 3 years intervals, and 5 top countries desc. arranged.
top_migrant_countries <- merged_age %>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Ukraine", "Turkey", "Russian Federation", "India") & year %in% c(2010, 2015,2019) & age != 0) %>%
select(destination_country, age, total_population, year)%>%
arrange(desc(total_population))
top_migrant_countries
ggplot(top_migrant_countries, aes(x=age, y=total_population, fill = destination_country)) +
geom_bar(stat="identity",position=position_dodge()) +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~year) +
theme_light()
library(ggplot2)
best_3 <- merged_age%>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey") & year %in% c("2019") & age != 0) %>%
select(destination_country, age, total_population, year)%>%
arrange(desc(total_population))
best_3
ggplot(best_3, aes(x=age, y=total_population, group = age)) +
geom_col(aes(fill = age), position = "dodge", stat = "identity") +
labs(title="Migrant age-categories distribution in 2019",
subtitle="Top migrats age-categories for the top 3 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~ destination_country) +
theme_light()
merged_age <- Reduce(function(...) merge(..., all=TRUE, sort = FALSE), list(by_child, by_youth, by_adult, by_senior))
merged_age
# filtering the number of migrants that is more than 3M in 2010, 2015, and 2019
migration_15_19 = sub_set_migrant %>%
filter(total_migrants >= 3000000 & year %in% c(2010 ,2015, 2019)) %>%
select(destination_country, origin_country, year, total_migrants)%>%
arrange(desc(total_migrants))
migration_15_19
ggplot(migration_15_19, aes(x=destination_country, y=total_migrants, fill = destination_country)) +
geom_bar(stat="identity", width=1, position = position_dodge()) +
labs(fill="destination country") +
labs(title="Migrant population bar chart",
subtitle="Top destinations for migrats population - more than 3M migrants per year") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_grid( ~ year) +
theme_light()
# filtering the number of migrants that is more than 3M in 2010, 2015, and 2019
migration_15_19 = sub_set_migrant %>%
filter(total_migrants >= 3000000 & year %in% c(2010 ,2015, 2019)) %>%
select(destination_country, origin_country, year, total_migrants)%>%
arrange(desc(total_migrants))
migration_15_19
ggplot(migration_15_19, aes(x=destination_country, y=total_migrants, fill = destination_country)) +
geom_bar(stat="identity", width=1, position = position_dodge()) +
labs(fill="destination country") +
labs(title="Migrant population bar chart",
subtitle="Top destinations for migrats population - more than 3M migrants per year") +
theme_bw() +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
facet_grid( ~ year) +
theme_light()
# filtering the number of migrants that is more than 3M in 2010, 2015, and 2019
migration_15_19 = sub_set_migrant %>%
filter(total_migrants >= 3000000 & year %in% c(2010 ,2015, 2019)) %>%
select(destination_country, origin_country, year, total_migrants)%>%
arrange(desc(total_migrants))
migration_15_19
ggplot(migration_15_19, aes(x=destination_country, y=total_migrants, fill = destination_country)) +
geom_bar(stat="identity", width=1, position = position_dodge()) +
labs(fill="destination country") +
labs(title="Migrant population bar chart",
subtitle="Top destinations for migrats population - more than 3M migrants per year") +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
facet_grid( ~ year) +
theme_light()
# filtering the number of migrants that is more than 3M in 2010, 2015, and 2019
migration_15_19 = sub_set_migrant %>%
filter(total_migrants >= 3000000 & year %in% c(2010 ,2015, 2019)) %>%
select(destination_country, origin_country, year, total_migrants)%>%
arrange(desc(total_migrants))
migration_15_19
ggplot(migration_15_19, aes(x=destination_country, y=total_migrants, fill = destination_country)) +
geom_bar(stat="identity", width=1, position = position_dodge()) +
labs(fill="destination country") +
labs(title="Migrant population bar chart",
subtitle="Top destinations for migrats population - more than 3M migrants per year") +
theme_bw() +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
facet_grid( ~ year) +
theme_light()
# filtering the number of migrants that is more than 3M in 2010, 2015, and 2019
migration_15_19 = sub_set_migrant %>%
filter(total_migrants >= 3000000 & year %in% c(2010 ,2015, 2019)) %>%
select(destination_country, origin_country, year, total_migrants)%>%
arrange(desc(total_migrants))
migration_15_19
ggplot(migration_15_19, aes(x=destination_country, y=total_migrants, fill = destination_country)) +
geom_bar(stat="identity", width=1, position = position_dodge()) +
labs(fill="destination country") +
labs(title="Migrant population bar chart",
subtitle="Top destinations for migrats population - more than 3M migrants per year") +
theme_bw() +
theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
facet_grid( ~ year) +
theme_light()
# filtering the number of migrants that is more than 3M in 2010, 2015, and 2019
migration_15_19 = sub_set_migrant %>%
filter(total_migrants >= 3000000 & year %in% c(2010 ,2015, 2019)) %>%
select(destination_country, origin_country, year, total_migrants)%>%
arrange(desc(total_migrants))
migration_15_19
ggplot(migration_15_19, aes(x=destination_country, y=total_migrants, fill = destination_country)) +
geom_bar(stat="identity", width=1, position = position_dodge()) +
labs(fill="destination country") +
labs(title="Migrant population bar chart",
subtitle="Top destinations for migrats population - more than 3M migrants per year") +
theme_bw() +
theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
facet_grid( ~ year)
# filtering the number of migrants that is more than 3M in 2010, 2015, and 2019
migration_15_19 = sub_set_migrant %>%
filter(total_migrants >= 3000000 & year %in% c(2010 ,2015, 2019)) %>%
select(destination_country, origin_country, year, total_migrants)%>%
arrange(desc(total_migrants))
migration_15_19
ggplot(migration_15_19, aes(x=destination_country, y=total_migrants, fill = destination_country)) +
geom_bar(stat="identity", width=1, position = position_dodge()) +
labs(fill="destination country") +
labs(title="Migrant population bar chart",
subtitle="Top destinations for migrats population - more than 3M migrants per year") +
theme_bw() +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
facet_grid( ~ year)
