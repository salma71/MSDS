n <- ((z * s_hat) / ME) ^ 2
paste0("Number of people needed for this sample are: ",n)
s_hat <- 250
ME <- 25
z <- 1.645 # alpha is 0.1 because of 90% confidence interval from the table
n <- ((z * s_hat) / ME) ^ 2
paste0("Number of people needed for this sample are: ",round(n, digits = 0))
s_hat <- 250
ME <- 25
z <- 1.645 # alpha is 0.1 because of 90% confidence interval from the table
n <- ((z * s_hat) / ME) ^ 2
paste0 ("Number of people needed for this sample are: ",round(n, digits = 0))
s_hat <- 250
ME <- 25
z <- 1.645 # alpha is 0.1 because of 90% confidence interval from the table
n <- ((z * s_hat) / ME) ^ 2
paste0 ("(a) Number of people needed for this sample are: ",round(n, digits = 0))
s_hat <- 250
ME <- 25
z <- 2.575 # alpha is 0.01 because of 99% confidence interval from the table
n <- ((z * s_hat) / ME) ^ 2
paste0 ("(c) Number of people needed for Luke sample is: ",round(n, digits = 0))
library(openintro)
data(hsb2)
scores <- c(hsb2$read, hsb2$write)
gp <- c(rep('read', nrow(hsb2)), rep('write', nrow(hsb2)))
par(mar = c(3, 4, 0.5, 0.5), las = 1, mgp = c(2.8, 0.7, 0),
cex.axis = 1.1, cex.lab = 1.1)
openintro::dotPlot(scores, gp, vertical = TRUE, ylab = "scores",
at=1:2+0.13, col = COL[1,3],
xlim = c(0.5,2.5), ylim = c(20, 80),
axes = FALSE, cex.lab = 1.25, cex.axis = 1.25)
axis(1, at = c(1,2), labels = c("read","write"), cex.lab = 1.25, cex.axis = 1.25)
axis(2, at = seq(20, 80, 20), cex.axis = 1.25)
boxplot(scores ~ gp, add = TRUE, axes = FALSE, col = NA)
par(mar=c(3.3, 2, 0.5, 0.5), las = 1, mgp = c(2.1, 0.7, 0),
cex.lab = 1.25, cex.axis = 1.25)
histPlot(hsb2$read - hsb2$write, col = COL[1],
xlab = "Differences in scores (read - write)", ylab = "")
n <- 200
avg_red_wrt <- -0.545
sd_red_wrt <- 8.887
SE <- sd_red_wrt/sqrt(n)
SE
n <- 200
avg_red_wrt <- -0.545
sd_red_wrt <- 8.887
SE <- sd_red_wrt/sqrt(n)
SE
t_score <- (avg_red_wrt - 0)/SE
t_score
n <- 200
avg_red_wrt <- -0.545
sd_red_wrt <- 8.887
SE <- sd_red_wrt/sqrt(n)
SE
t_score <- (avg_red_wrt - 0)/SE
t_score
P_value <- pt(t_score, n-1, lower.tail = TRUE)
P_value
n <- 200
avg_red_wrt <- -0.545
sd_red_wrt <- 8.887
SE <- sd_red_wrt/sqrt(n)
SE
t_score <- (avg_red_wrt - 0)/SE
t_score
P_value <- pt(t_score, n-1, lower.tail = TRUE)
paste0("The P_value is ",P_value, " which is about 0.20 or about 20% likelihood of seeing an average difference of -0.545 if the the null hypothesis is true that there is no difference. This is strong evidence to fail to reject the null hypothesis.")
SE <- sd_red_wrt/sqrt(n)
t_score <- qt(p=(0.05/2), n-1)
t_score
SE <- sd_red_wrt/sqrt(n)
t_score <- qt(p=(0.05/2), n-1, lower.tail = FALSE)
t_score
SE <- sd_red_wrt/sqrt(n)
t_score <- qt(p=(0.05/2), n-1, lower.tail = FALSE)
t_score
upper <- avg_red_wrt + SE * t_score
lower <- avg_red_wrt - SE * t_score
paste0("The confidence interval is: ", upper, lower)
SE <- sd_red_wrt/sqrt(n)
t_score <- qt(p=(0.05/2), n-1, lower.tail = FALSE)
t_score
upper <- avg_red_wrt + SE * t_score
lower <- avg_red_wrt - SE * t_score
paste0("The confidence interval is: ", c(upper, lower))
SE <- sd_red_wrt/sqrt(n)
t_score <- qt(p=(0.05/2), n-1, lower.tail = FALSE)
t_score
upper <- avg_red_wrt + SE * t_score
lower <- avg_red_wrt - SE * t_score
c(upper, lower)
library(openintro)
fuel_eff <- read.csv("https://github.com/jbryer/DATA606Fall2019/raw/master/course_data/fuel_eff.csv")
man_rows <- which(fuel_eff$transmission == "M")
aut_rows <- which(fuel_eff$transmission == "A")
set.seed(3583)
man_rows_samp <- sample(man_rows, 26)
aut_rows_samp <- sample(aut_rows, 26)
fuel_eff_samp <- fuel_eff[c(man_rows_samp,aut_rows_samp), ]
fuel_eff_samp$transmission <- droplevels(fuel_eff_samp$transmission)
levels(fuel_eff_samp$transmission) <- c("automatic", "manual")
boxPlot(fuel_eff_samp$hwy_mpg, fact = fuel_eff_samp$transmission, ylim = c(10, 37),
xlab = "Hwy MPG", axes = FALSE, xlim = c(0.5, 2.5))
axis(1, at = c(1,2), labels = c("automatic","manual"))
axis(2, at = c(15,25,35))
library(openintro)
library(xtable)
if(!file.exists('gss2010.Rda')) {
download.file('https://github.com/jbryer/DATA606Fall2019/raw/master/course_data/gss2010.Rda',
dest = 'gss2010.Rda', mode = "wb")
}
load("gss2010.Rda")
gss <- gss2010
gss_sub <- gss[which(!is.na(gss$hrs1) & !is.na(gss$degree)), ]
gss_sub <- gss_sub[, which(names(gss_sub) == "degree" | names(gss_sub) == "hrs1")]
levels(gss_sub$degree) <- c("Less than HS","HS","Jr Coll","Bachelor's","Graduate")
par(mar = c(2,3.5,0.5,.5), mgp = c(2.3,0.7,0), las = 1)
boxPlot(gss_sub$hrs1, fact = gss_sub$degree,
col = COL[1,2], ylab = "Hours worked per week", xlim=c(0.6, 5.4))
# we assume that the confidence interval is 95%, alpha is 0.05, p_value = 0.0682 which is > alpha, we fail to reject H0
k <- 5 # number of groups
n <- 1172
mean_srt <- 501.54
sum_srt <- 267382
p <- 0.0682
# get the Df
Dfg <- k - 1
dfe <- n - k
dft <- dfg + dfe
# we assume that the confidence interval is 95%, alpha is 0.05, p_value = 0.0682 which is > alpha, we fail to reject H0
k <- 5 # number of groups
n <- 1172
mean_srt <- 501.54
sum_srt <- 267382
p <- 0.0682
# get the Df
dfg <- k - 1
dfe <- n - k
dft <- dfg + dfe
df <- c(dfg, dfe,dft)
paste0("df values: ", df)
# we assume that the confidence interval is 95%, alpha is 0.05, p_value = 0.0682 which is > alpha, we fail to reject H0
k <- 5 # number of groups
n <- 1172
mean_srt <- 501.54
sum_srt <- 267382
p <- 0.0682
# get the Df
dfg <- k - 1
dfe <- n - k
dft <- dfg + dfe
df <- c(dfg, dfe, dft)
paste0("df values: ", df)
# we assume that the confidence interval is 95%, alpha is 0.05, p_value = 0.0682 which is > alpha, we fail to reject H0
k <- 5 # number of groups
n <- 1172
mean_srt <- 501.54
sum_srt <- 267382
p <- 0.0682
# get the Df
dfg <- k - 1
dfe <- n - k
dft <- dfg + dfe
df <- c(dfg, dfe, dft)
df
# we assume that the confidence interval is 95%, alpha is 0.05, p_value = 0.0682 which is > alpha, we fail to reject H0
k <- 5 # number of groups
n <- 1172
mean_srt <- 501.54
sum_srt <- 267382
p <- 0.0682
# get the Df
dfg <- k - 1
dfe <- n - k
dft <- dfg + dfe
df <- c(dfg, dfe, dft)
df
# find summation sqrt
sumation_rt_degree <- dfg * mean_srt
sumation_rt_resd <- sum_srt + sumation_rt_degree
total <- c(sumation_rt_degree, sum_srt, sumation_rt_resd)
# we assume that the confidence interval is 95%, alpha is 0.05, p_value = 0.0682 which is > alpha, we fail to reject H0
k <- 5 # number of groups
n <- 1172
mean_srt <- 501.54
sum_srt <- 267382
p <- 0.0682
# get the Df
dfg <- k - 1
dfe <- n - k
dft <- dfg + dfe
df <- c(dfg, dfe, dft)
df
# find summation sqrt
sumation_rt_degree <- dfg * mean_srt
sumation_rt_resd <- sum_srt + sumation_rt_degree
total <- c(sumation_rt_degree, sum_srt, sumation_rt_resd)
total
# we assume that the confidence interval is 95%, alpha is 0.05, p_value = 0.0682 which is > alpha, we fail to reject H0
k <- 5 # number of groups
n <- 1172
mean_srt <- 501.54
sum_srt <- 267382
p <- 0.0682
# get the Df
dfg <- k - 1
dfe <- n - k
dft <- dfg + dfe
df <- c(dfg, dfe, dft)
df
# find summation sqrt
sumation_rt_degree <- dfg * mean_srt
sumation_rt_resd <- sum_srt + sumation_rt_degree
total <- c(sumation_rt_degree, sum_srt, sumation_rt_resd)
total
# find mean sqrt
mean_res <- sum_srt / dfe
mean_res
# we assume that the confidence interval is 95%, alpha is 0.05, p_value = 0.0682 which is > alpha, we fail to reject H0
k <- 5 # number of groups
n <- 1172
mean_srt <- 501.54
sum_srt <- 267382
p <- 0.0682
# get the Df
dfg <- k - 1
dfe <- n - k
dft <- dfg + dfe
df <- c(dfg, dfe, dft)
df
# find summation sqrt
sumation_rt_degree <- dfg * mean_srt
sumation_rt_resd <- sum_srt + sumation_rt_degree
total <- c(sumation_rt_degree, sum_srt, sumation_rt_resd)
total
# find mean sqrt
mean_res <- sum_srt / dfe
mean_res
# find the f-value
f_value <- mean_srt / mean_res
f_value
# we assume that the confidence interval is 95%, alpha is 0.05, p_value = 0.0682 which is > alpha, we fail to reject H0
k <- 5 # number of groups
n <- 1172
mean_srt <- 501.54
sum_srt <- 267382
p_value <- 0.0682
# get the Df for degree, residential, and total
dfg <- k - 1
dfe <- n - k
dft <- dfg + dfe
df <- c(dfg, dfe, dft)
df
# find summation sqrt
sumation_rt_degree <- dfg * mean_srt
sumation_rt_resd <- sum_srt + sumation_rt_degree
total <- c(sumation_rt_degree, sum_srt, sumation_rt_resd)
total
# find mean sqrt
mean_res <- sum_srt / dfe
mean_res
# find the f-value
f_value <- mean_srt / mean_res
f_value
n <- 26
mean_auto <- 22.92
mean_man <- 27.88
sd_auto <- 5.29
sd_man <- 5.01
diff_mean <-  mean_man - mean_auto
diff_sd <- sd_man - sd_auto
diff_se <- (sd_man/sqrt(n_man)) - (sd_auto/sqrt(n_auto))
n_man <- 26
n_auto <- 26
mean_auto <- 22.92
mean_man <- 27.88
sd_auto <- 5.29
sd_man <- 5.01
diff_mean <-  mean_man - mean_auto
diff_sd <- sd_man - sd_auto
diff_se <- (sd_man/sqrt(n_man)) - (sd_auto/sqrt(n_auto))
t <- (diff_mean - 0)/diff_se
p <- round(2 * pt(t, n-1), 3)
p
n_man <- 26
n_auto <- 26
mean_auto <- 22.92
mean_man <- 27.88
sd_auto <- 5.29
sd_man <- 5.01
diff_mean <-  mean_man - mean_auto
diff_mean
diff_sd <- sd_man - sd_auto
diff_se <- (sd_man/sqrt(n_man)) - (sd_auto/sqrt(n_auto))
t <- (diff_mean - 0)/diff_se
p <- round(2 * pt(t, n-1), 3)
p
n_man <- 26
n_auto <- 26
mean_auto <- 22.92
mean_man <- 27.88
sd_auto <- 5.29
sd_man <- 5.01
diff_mean <-  mean_man - mean_auto
diff_mean
diff_sd <- sd_man - sd_auto
diff_sd
diff_se <- (sd_man/sqrt(n_man)) - (sd_auto/sqrt(n_auto))
t <- (diff_mean - 0)/diff_se
p <- round(2 * pt(t, n-1), 3)
p
n_man <- 26
n_auto <- 26
mean_auto <- 22.92
mean_man <- 27.88
sd_auto <- 5.29
sd_man <- 5.01
diff_mean <-  mean_man - mean_auto
diff_mean
diff_sd <- sd_man - sd_auto
diff_sd
diff_se <- (sd_man/sqrt(n_man)) - (sd_auto/sqrt(n_auto))
diff_se
t <- (diff_mean - 0)/diff_se
p <- round(2 * pt(t, n-1), 3)
p
n_man <- 26
n_auto <- 26
mean_auto <- 22.92
mean_man <- 27.88
sd_auto <- 5.29
sd_man <- 5.01
diff_mean <-  mean_man - mean_auto
diff_mean
diff_sd <- sd_man - sd_auto
diff_sd
diff_se <- (sd_man/sqrt(n_man)) - (sd_auto/sqrt(n_auto))
diff_se
t <- (diff_mean - 0)/diff_se
t
p <- 2 * pt(t, n-1)
p
n_man <- 26
n_auto <- 26
mean_auto <- 16.12
mean_man <- 19.85
sd_auto <- 3.58
sd_man <- 4.51
diff_mean <-  mean_man - mean_auto
diff_mean
diff_sd <- sd_man - sd_auto
diff_sd
diff_se <- (sd_man/sqrt(n_man)) - (sd_auto/sqrt(n_auto))
diff_se
t <- (diff_mean - 0)/diff_se
t
p <- 2 * pt(t, n-1)
p
n_man <- 26
n_auto <- 26
mean_auto <- 16.12
mean_man <- 19.85
sd_auto <- 3.58
sd_man <- 4.51
diff_mean <-  mean_man - mean_auto
diff_mean
diff_sd <- sd_man - sd_auto
diff_sd
se <- (sd_man/sqrt(n_man)) + (sd_auto/sqrt(n_auto))
se
t <- (diff_mean - 0)/se
t
p <- 2 * pt(t, n-1)
p
n_man <- 26
n_auto <- 26
mean_auto <- 16.12
mean_man <- 19.85
sd_auto <- 3.58
sd_man <- 4.51
diff_mean <-  mean_man - mean_auto
diff_mean
diff_sd <- sd_man - sd_auto
diff_sd
se <- sqrt((sd_man^2/n_man) + (sd_auto^2/n_auto))
se
t <- (diff_mean - 0)/se
t
p <- 2 * pt(t, n-1)
p
n_man <- 26
n_auto <- 26
mean_auto <- 16.12
mean_man <- 19.85
sd_auto <- 3.58
sd_man <- 4.51
diff_mean <-  mean_man - mean_auto
diff_mean
diff_sd <- sd_man - sd_auto
diff_sd
se <- sqrt((sd_man^2/n_man) + (sd_auto^2/n_auto))
se
t <- (diff_mean - 0)/se
t
p <- pt(t, n-1, lower.tail = FALSE)
p
n_man <- 26
n_auto <- 26
mean_auto <- 16.12
mean_man <- 19.85
sd_auto <- 3.58
sd_man <- 4.51
diff_mean <-  mean_man - mean_auto
diff_mean
diff_sd <- sd_man - sd_auto
diff_sd
se <- sd_man/sqrt(n_man) + sd_auto/sqrt(n_auto)
se
t <- (diff_mean - 0)/se
t
p <- pt(t, n-1, lower.tail = FALSE)
p
n <- 26
mean_auto <- 16.12
mean_man <- 19.85
sd_auto <- 3.58
sd_man <- 4.51
diff_mean <-  mean_man - mean_auto
diff_mean
diff_sd <- sd_man - sd_auto
diff_sd
se <- (sd_man + sd_auto)/sqrt(n)
se
t <- (diff_mean - 0)/se
t
p <- pt(t, n-1, lower.tail = FALSE)
p
n_man <- 26
n_auto <- 26
mean_auto <- 16.12
mean_man <- 19.85
sd_auto <- 3.58
sd_man <- 4.51
diff_mean <-  mean_man - mean_auto
diff_mean
diff_sd <- sd_man - sd_auto
diff_sd
se <- sqrt((sd_man^2/n_man) + (sd_auto^2/n_auto))
se
t <- (diff_mean - 0)/se
t
p <- pt(t, n-1, lower.tail = FALSE)
p
beta <- 0.8
d <- 0.5
sd <- 2.2
sample <- 2*((1.96 + 0.842)^2)*2.2^2/0.5^2
sample
# alpha = 0.05, z0.8 = 0.84, z0.05 = 1.96
sd <- 2.2
es <- 0.5
n <- (((0.84 + 1.96)^2)/(0.5)^2)*(2 * 2.2^2)
n
# alpha = 0.05, z0.8 = 0.84, z0.05 = 1.96
sd <- 2.2
es <- 0.5
n <- (((0.84 + 1.96)^2)/(0.5)^2)*(2 * 2.2^2)
paste0 ("Number of sample size is: ",round(n, digits = 0))
# alpha = 0.05, z0.8 = 0.84, z0.05 = 1.96
sd <- 2.2
es <- 0.5
n <- (((0.84 + 1.96)^2)/(0.5)^2)*(2 * 2.2^2)
paste0 ("Number of desired sample size to the power 80% is: ",round(n, digits = 0))
install.packages("amsmath")
install.packages("BM")
qnorm()
install.packages('amsmath',repos='https://github.com/latex3/latex2e/projects/1')
n <- 200
avg_red_wrt <- -0.545
sd_red_wrt <- 8.887
SE <- sd_red_wrt/sqrt(n)
SE
t_score <- (avg_red_wrt - 0)/SE
t_score
P_value <- pt(t_score, n-1, lower.tail = TRUE)
paste0("The P_value is ",P_value, " which is about 0.20 or about 20% \n
likelihood of seeing an average difference of -0.545 if the the null \n
hypothesis is true that there is no difference.\n
This is strong evidence to fail to reject the null hypothesis.")
n <- 200
avg_red_wrt <- -0.545
sd_red_wrt <- 8.887
SE <- sd_red_wrt/sqrt(n)
SE
t_score <- (avg_red_wrt - 0)/SE
t_score
P_value <- pt(t_score, n-1, lower.tail = TRUE)
paste0("The P_value is ",P_value, " which is about 0.20 or about 20%
likelihood of seeing an average difference of -0.545 if the the null
hypothesis is true that there is no difference.
This is strong evidence to fail to reject the null hypothesis.")
n <- 200
avg_red_wrt <- -0.545
sd_red_wrt <- 8.887
SE <- sd_red_wrt/sqrt(n)
SE
t_score <- (avg_red_wrt - 0)/SE
t_score
P_value <- pt(t_score, n-1, lower.tail = TRUE)
paste0("The P_value is ",P_value)
