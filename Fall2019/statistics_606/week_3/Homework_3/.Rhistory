fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
# First, I extracted all the upper case letters from the text and the dots
msg <- str_extract_all(secret_msg, "[[:upper:].]{1,}")
# converting the string into a vector of chars
msg_df <- unlist(msg)
msg_df
# concatenate all the chars with each other
msg_df <- str_c(msg_df, collapse = "")
# replace all the dots with white spaces
msg <- str_replace_all(msg_df, "\\.", " ")
msg
#add ! after congratulations
gsub("[[:punct:]!]", "!", word(msg[1]))
secret_msg = "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0Tanwo
Uwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigO
d6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5
fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
# First, I extracted all the upper case letters from the text and the dots
msg <- str_extract_all(secret_msg, "[[:upper:][:punct:]]{1,}")
# converting the string into a vector of chars
msg_df <- unlist(msg)
msg_df
# concatenate all the chars with each other
msg_df <- str_c(msg_df, collapse = "")
# replace all the dots with white spaces
msg <- str_replace_all(msg_df, "\\.", " ")
msg
#add ! after congratulations
#msg <- str_replace(word(msg[1]), " ", "[!]")
#msg
secret_msg = "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0Tanwo
Uwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigO
d6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5
fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
# First, I extracted all the upper case letters from the text and the dots
msg <- str_extract_all(secret_msg, "[[:upper:][:punct:]]{1,}")
# converting the string into a vector of chars
msg_df <- unlist(msg)
msg_df
# concatenate all the chars with each other
msg_df <- str_c(msg_df, collapse = "")
# replace all the dots with white spaces
msg <- str_replace_all(msg_df, "\\.", " ")
msg
install.packages("rmdformats")
install.packages("rmdformats")
install.packages("prettydoc")
setwd("~/Desktop/MSDS_2019/Fall2019/statistics_606/week_3/lab_3")
load("kobe.rdata")
head(kobe)
kobe$basket[1:9]
barplot(table(kobe_streak))
barplot(table(kobe_streak))
barplot(table(kobe_streak))
kobe_streak <- calc_streak(kobe$basket)
barplot(table(kobe_streak))
sample(outcomes, size = 1, replace = TRUE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = TRUE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = TRUE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = TRUE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = TRUE)
sim_fair_coin <- sample(outcomes, size = 100, replace = TRUE)
sim_fair_coin <- sample(outcomes, size = 100, replace = TRUE)
sim_fair_coin
table(sim_fair_coin)
table(sim_fair_coin)
table(sim_fair_coin)
sim_unfair_coin
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
?sample
outcomes <- c("H", "M")
sim_basket <- sample(outcomes, size = 1, replace = TRUE)
outcomes <- c("H", "M")
sim_basket <- sample(outcomes, size = 1, replace = TRUE)
table(sim_basket)
outcomes <- c("H", "M")
sim_basket <- sample(outcomes, size = 1, replace = TRUE, prob = c(0.45, 0.55))
table(sim_basket)
outcomes <- c("H", "M")
sim_basket <- sample(outcomes, size = 133, replace = TRUE, prob = c(0.45, 0.55))
table(sim_basket)
kobe$basket
sim_basket
sim_basket
sim_basket
ind_streak <- calc_streak(kobe$sim_basket)
barplot(table(ind_streak))
sim_basket
sim_basket <- sample(outcomes, size = 133, replace = TRUE, prob = c(0.45, 0.55))
table(sim_basket)
sim_basket
ind_streak <- calc_streak(kobe$sim_basket)
barplot(table(ind_streak))
ind_streak <- calc_streak(kobe$sim_basket)
ind_streak <- calc_streak(sim_basket)
barplot(table(ind_streak))
obe_streak <- calc_streak(kobe$basket)
barplot(table(kobe_streak))
ind_streak <- calc_streak(sim_basket)
barplot(table(ind_streak))
kobe_streak <- calc_streak(kobe$basket)
barplot(table(kobe_streak))
calc_streak(sim_basket)
barplot(table(ind_streak))
<- calc_streak(kobe$basket)
barplot(table(kobe_stre
kobe_streak <- calc_streak(kobe$basket)
barplot(table(kobe_streak))
ind_streak <- calc_streak(sim_basket)
barplot(table(ind_streak))
table(kobe_streak
table(kobe_streak)
table(kobe_streak)
table(ind_streak)
counts <- table(kobe_streak, ind_streak)
barplot(counts, xlab = "number of streaks", ylab = "counts", col = c("darkblue", "red"), legend = rownames(counts), beside = TRUE)
counts <- table(kobe_streak, ind_streak)
barplot(counts, xlab = "number of streaks", ylab = "counts", col = c("darkblue", "red"), legend = rownames(counts), beside = TRUE)
counts <- table(kobe_streak, ind_streak)
barplot(counts, xlab = "number of streaks", col = c("darkblue", "red"), legend = rownames(counts), beside = TRUE)
barplot(table(kobe_streak, ind_streak) = "number of streaks", col = c("darkblue", "red"), legend = rownames(counts), beside = TRUE)
barplot(table(kobe_streak, ind_streak), xlab = "number of streaks", col = c("darkblue", "red"), legend = rownames(counts), beside = TRUE)
h <- rbind(ind_streak,kobe_streak)
h
barplot(h, xlab = "number of streaks", col = c("darkblue", "red"), legend = rownames(counts), beside = TRUE)
#counts <- table(kobe_streak, ind_streak)
barplot(h, xlab = "number of streaks", col = c("darkblue", "red"), legend = rownames(h), beside = TRUE)
#counts <- table(kobe_streak, ind_streak)
barplot(counts, xlab = "number of streaks", col = c("darkblue", "red"), legend = rownames(counts), beside = TRUE)
counts <- rbind(ind_streak,kobe_streak)
counts
#counts <- table(kobe_streak, ind_streak)
barplot(counts, xlab = "number of streaks", col = c("darkblue", "red"), legend = rownames(counts), beside = TRUE)
#counts <- table(kobe_streak, ind_streak)
barplot(counts, xlab = "number of streaks",ylab = "number of streaks",ylim = c(0, max(max(kobe_streak), max(ind_streak)) + 10), col = c("darkblue", "red"), legend = rownames(counts), beside = TRUE)
#counts <- table(kobe_streak, ind_streak)
barplot(counts, xlab = "number of streaks",ylab = "number of streaks",ylim = c(0, max(max(kobe_streak), max(ind_streak)) + 10), col = c("darkblue", "red"), legend = rownames(counts), beside = TRUE, xpd = FALSE)
counts <- rbind(ind_streak,kobe_streak)
counts
#counts <- table(kobe_streak, ind_streak)
barplot(counts, xlab = "number of streaks",ylab = "number of streaks",ylim = c(0, max(max(kobe_streak), max(ind_streak)) + 10), col = c("darkblue", "red"), legend = rownames(counts), beside = TRUE, xpd = FALSE)
#counts <- table(kobe_streak, ind_streak)
barplot(counts, xlab = "number of streaks",ylab = "number of streaks", col = c("darkblue", "red"), legend = rownames(counts), beside = TRUE, xpd = FALSE)
barplot(h,beside = T,main="Independent Shooter Distribution vs. Kobe Distribution",col=c("darkblue","red"),xlab="Streak Lengths",ylab = "Number of Streaks",legend=c("Independent Shooter","Kobe"),ylim=c(0,max(max(kobeVector),max(independentVector))+10),xpd = FALSE)
kobeVector<-unlist(table(kobe_streak))
independentVector<-unlist(table(ind_streak))
if (length(kobeVector)<length(independentVector)) {
kobeVector<-c(kobeVector,rep(0,length(independentVector)-length(kobeVector)))
} else {
independentVector<-c(independentVector,rep(0,length(kobeVector)-length(independentVector)))
}
kobeVector
h<-rbind(independentVector,kobeVector)
h
barplot(h,beside = T,main="Independent Shooter Distribution vs. Kobe Distribution",col=c("darkblue","red"),xlab="Streak Lengths",ylab = "Number of Streaks",legend=c("Independent Shooter","Kobe"),ylim=c(0,max(max(kobeVector),max(independentVector))+10),xpd = FALSE)
independentVector<-c(independentVector,rep(0,length(kobeVector)-length(independentVector)))
h<-rbind(ind_df,kobe_df)
barplot(counts ,beside = T,main="Independent Shooter Distribution vs. Kobe Distribution",col=c("darkblue","red"),xlab="Streak Lengths",ylab = "Number of Streaks",legend=c("Independent Shooter","Kobe"),ylim=c(0,max(max(kobeVector),max(independentVector))+10),xpd = FALSE)
barplot(h ,beside = T,main="Independent Shooter Distribution vs. Kobe Distribution",col=c("darkblue","red"),xlab="Streak Lengths",ylab = "Number of Streaks",legend=c("Independent Shooter","Kobe"),ylim=c(0,max(max(kobeVector),max(independentVector))+10),xpd = FALSE)
barplot(counts ,beside = T,main="Independent Shooter Distribution vs. Kobe Distribution",col=c("darkblue","red"),xlab="Streak Lengths",ylab = "Number of Streaks",legend=c("Independent Shooter","Kobe"),ylim=c(0,max(max(kobeVector),max(independentVector))+10),xpd = FALSE)
barplot(pp ,beside = T,main="Independent Shooter Distribution vs. Kobe Distribution",col=c("darkblue","red"),xlab="Streak Lengths",ylab = "Number of Streaks",legend=c("Independent Shooter","Kobe"),ylim=c(0,max(max(kobeVector),max(independentVector))+10),xpd = FALSE)
pp <- rbind(ind_df,kobe_df)
pp
barplot(pp ,beside = T,main="Independent Shooter Distribution vs. Kobe Distribution",col=c("darkblue","red"),xlab="Streak Lengths",ylab = "Number of Streaks",legend=c("Independent Shooter","Kobe"),ylim=c(0,max(max(kobeVector),max(independentVector))+10),xpd = FALSE)
barplot(pp ,beside = T,main="Independent Shooter Distribution vs. Kobe Distribution",col=c("darkblue","red"),xlab="Streak Lengths",ylab = "Number of Streaks",legend=c("Independent Shooter","Kobe"),ylim=c(0,max(max(kobe_df),max(ind_df))+10),xpd = FALSE)
h <- rbind(ind_df,kobe_df)
barplot(h ,beside = T,main="Independent Shooter Distribution vs. Kobe Distribution",col=c("darkblue","red"),xlab="Streak Lengths",ylab = "Number of Streaks",legend=c("Independent Shooter","Kobe"))
barplot(differ ,beside = T,main="Independent Shooter Distribution vs. Kobe Distribution",col=c("darkblue","red"),xlab="Streak Lengths",ylab = "Number of Streaks",legend=c("Independent Shooter","Kobe"))
differ <- rbind(ind_df,kobe_df)
differ
barplot(differ ,beside = T,main="Independent Shooter Distribution vs. Kobe Distribution",col=c("darkblue","red"),xlab="Streak Lengths",ylab = "Number of Streaks",legend=c("Independent Shooter","Kobe"))
barplot(data_df ,beside = T,col=c("darkblue","red"),xlab="Streak Lengths",ylab = "Number of Streaks",legend=c("Independent Shooter","Kobe Bryant"))
load("kobe.rdata")
head(kobe)
kobe$basket[1:9]
# What does a streak length of 1 mean, i.e. how many hits and misses are in a streak of 1? What about a streak length of 0?
# 1: means one hit followed by missed hit. one hit - one miss. streak 0 means no hits, only missed hits.
kobe_streak <- calc_streak(kobe$basket)
barplot(table(kobe_streak))
# Describe the distribution of Kobe’s streak lengths from the 2009 NBA finals.
# It was a right-skewed distribution
# What was his typical streak length? How long was his longest streak of baskets?
# The typical streak length was 0. Streaks of 1 were second with 24, then 6 streaks of 2 and 3, and only one streak of 4.
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = TRUE)
sim_fair_coin <- sample(outcomes, size = 100, replace = TRUE)
sim_fair_coin
table(sim_fair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
# In your simulation of flipping the unfair coin 100 times, how many flips came up heads?
# 17 times
?sample
outcomes <- c("H", "M")
sim_basket <- sample(outcomes, size = 1, replace = TRUE)
table(sim_basket)
# What change needs to be made to the sample function so that it reflects a shooting percentage of 45%?
# add prob = c(0.45, 0.55) argument to the sample function
# Make this adjustment, then run a simulation to sample 133 shots.
# Assign the output of this simulation to a new object called sim_basket.
outcomes <- c("H", "M")
sim_basket <- sample(outcomes, size = 133, replace = TRUE, prob = c(0.45, 0.55))
table(sim_basket)
sim_basket
# On your own
ind_streak <- calc_streak(sim_basket)
barplot(table(ind_streak))
# 1. Describe the distribution of streak lengths.
# Right-skewed distribution
# What is the typical streak length for this simulated independent shooter with a 45% shooting percentage?
# 0
# How long is the player’s longest streak of baskets in 133 shots?
# 2
# If you were to run the simulation of the independent shooter a second time,
# how would you expect its streak distribution to compare to the distribution from the question above? Exactly the same? Somewhat similar? Totally different? Explain your reasoning.
# I expect to be the same as always the percentage is 45% to 55% for hit and miss respectively.
# How does Kobe Bryant’s distribution of streak lengths compare to the distribution of streak lengths for the simulated shooter? Using this comparison, do you have evidence that the hot hand model fits Kobe’s shooting patterns? Explain.
# The streak length for the simulated shooter is longer than Kobe Bryant 6 - 4 baised to the simulator shooter.
# The distributions look very similar. Therefore, there doesn’t appear to be evidence for Kobe Bryant’s hot hand.
table(kobe_streak)
table(ind_streak)
kobe_df <- unlist(table(kobe_streak))
ind_df <- unlist(table(ind_streak))
if (length(kobe_df) < length(ind_df)) {
kobe_df <- c(kobe_df,rep(0,length(ind_df) - length(kobe_df)))
} else {
ind_df <- c(ind_df,rep(0,length(kobe_df) - length(ind_df)))
}
kobe_df
data_df <- rbind(ind_df,kobe_df)
data_df
barplot(data_df ,beside = T,col=c("darkblue","red"),xlab="Streak Lengths",ylab = "Number of Streaks",legend=c("Independent Shooter","Kobe Bryant"))
barplot(data_df ,beside = T,col=c("purple","yellow"),xlab="Streak Lengths",ylab = "Number of Streaks",legend=c("Independent Shooter","Kobe Bryant"))
median(data_df)
median(kobe_df)
median(ind_df)
IQR(kobe_df)
IQR(ind_df)
mean(kobe_df)
mean(ind_df)
IQR(ind_df)
install.packages(c('openintro','OIdata','devtools','tidyverse', 'ggplot2',
'psych','reshape2','knitr','markdown','shiny','R.rsp',
'fivethirtyeight'))
devtools::install_github("jbryer/DATA606")
setwd("~/Desktop/MSDS_2019/Fall2019/statistics_606/week_3/Homework_3")
install.packages('VennDiagram')
knitr::opts_chunk$set(echo = TRUE)
survey_df
library(VennDiagram)
survey_df <- c("below poverty line" = 0.146, "speaks other languages" = 0.207, "both" = 0.042)
survey_df
library(VennDiagram)
survey_df <- c("below poverty line" = 0.146, "speaks other languages" = 0.207, "both" = 0.042)
survey_df
draw.pairwise.venn(area1 = 0.146, area2 = 0.207, cross.area = 0.042, category = c("below poverty line", "speaks other languages", "both"))
draw.pairwise.venn(area1 = 0.146, area2 = 0.207, cross.area = 0.042, category = c("below poverty line", "speaks other languages"))
draw.pairwise.venn(area1 = 0.146, area2 = 0.207, cross.area = 0.042, category = c("below poverty line", "speaks other languages"))
draw.pairwise.venn(area1 = 0.146, area2 = 0.207, cross.area = 0.042, category = c("below poverty line", "speaks other languages") , lty = rep("blank",
2), fill = c("light blue", "pink"), alpha = rep(0.5, 2), cat.pos = c(0,
0), cat.dist = rep(0.025, 2))
grid.newpage()
grid.newpage()
draw.pairwise.venn(area1 = 0.146, area2 = 0.207, cross.area = 0.042, category = c("below poverty line", "speaks other languages") , lty = rep("blank",
2), fill = c("light blue", "pink"), alpha = rep(0.5, 2), cat.pos = c(0,
0), cat.dist = rep(0.025, 2))
grid.newpage()
draw.pairwise.venn(area1 = 0.146, area2 = 0.207, cross.area = 0.042, category = c("below poverty line", "speaks other languages") , lty = rep("blank",
2), fill = c("light blue", "pink"), alpha = rep(0.5, 2), cat.pos = c(0,
0), cat.dist = rep(0.025, 2), scaled = FALSE)
# drawing the diagram
grid.newpage()
draw.triple.venn(area1 = 0.146, area2 = 0.207, area3 = 0.647, cross.area = 0.042, category = c("below poverty line", "speaks other languages") , lty = rep("blank",
2), fill = c("skyblue", "pink1", "mediumorchid"), alpha = rep(0.5, 2), cat.pos = c(0,
0), cat.dist = rep(0.025, 2), scaled = FALSE)
# drawing the diagram
grid.newpage()
draw.triple.venn(area1 = 0.146, area2 = 0.207, area3 = 0.647, cross.area = 0.042, category = c("below poverty line", "speaks other languages") , lty = rep("blank",
2), fill = c("skyblue", "pink1", "mediumorchid"))
# drawing the diagram
grid.newpage()
draw.triple.venn(area1 = 0.146, area2 = 0.207, area3 = 0.647, n12 = 11, n23 = 4, n13 = 5, n123 = 1, category = c("below poverty line", "speaks other languages") , lty = rep("blank",
2), fill = c("skyblue", "pink1", "mediumorchid"))
# drawing the diagram
grid.newpage()
draw.triple.venn(area1 = 0.146, area2 = 0.207, area3 = 0.647, n12 = 11, n23 = 4, n13 = 5, n123 = 1, category = c("below poverty line", "speaks other languages", "speak english at home") , lty = rep("blank",
2), fill = c("skyblue", "pink1", "mediumorchid"))
draw.triple.venn(area1 = 0.146, area2 = 0.207, area3 = 0.647, n12 = 11, n23 = 4, n13 = 5, n123 = 1, category = c("below poverty line", "speaks other languages", "speak english at home") , lty = rep("blank", fill = c("skyblue", "pink1", "mediumorchid"))
# drawing the diagram
grid.newpage()
# drawing the diagram
grid.newpage()
draw.triple.venn(area1 = 0.146, area2 = 0.207, area3 = 0.647, n12 = 11, n23 = 4, n13 = 5, n123 = 1, category = c("below poverty line", "speaks other languages", "speak english at home") , lty = rep("blank", fill = c("skyblue", "pink1", "mediumorchid"))
# drawing the diagram
grid.newpage()
draw.triple.venn(area1 = 0.146, area2 = 0.207, area3 = 0.647, n12 = 11, n23 = 4, n13 = 5, n123 = 1, category = c("below poverty line", "speaks other languages", "speak english at home") , lty = rep("blank", fill = c("skyblue", "pink1", "mediumorchid")))
# drawing the diagram
grid.newpage()
draw.triple.venn(area1 = 0.146, area2 = 0.207, area3 = 0.647, n12 = 0.042, n23 = 0, n13 = 0, n123 = 0, category = c("below poverty line", "speaks other languages", "speak english at home") , lty = rep("blank", fill = c("skyblue", "pink1", "mediumorchid")))
# drawing the diagram
grid.newpage()
draw.triple.venn(area1 = 0.146, area2 = 0.207, area3 = 0.647, n12 = 0.042, n23 = 0, n13 = 0,
n123 = 0, category = c("below poverty line", "speaks other languages", "speaks English at home"), lty = "blank",
fill = c("skyblue", "pink1", "mediumorchid"))
# drawing the diagram
grid.newpage()
draw.pairwise.venn(area1 = 0.146, area2 = 0.207, cross.area = 0.042, category = c("below poverty line", "speaks other languages" ),
fill = c("skyblue", "pink1", cat.pos = c(0,0)))
# drawing the diagram
grid.newpage()
draw.pairwise.venn(area1 = 0.146, area2 = 0.207, cross.area = 0.042, category = c("below poverty line", "speaks other languages" ),
fill = c("skyblue", "pink1"), cat.pos = c(0,0)))
# drawing the diagram
grid.newpage()
draw.pairwise.venn(area1 = 0.146, area2 = 0.207, cross.area = 0.042, category = c("below poverty line", "speaks other languages" ),
fill = c("skyblue", "pink1"), cat.pos = c(0,0))
# drawing the diagram
grid.newpage()
draw.pairwise.venn(area1 = 0.146, area2 = 0.207, cross.area = 0.042, category = c("below poverty line", "speaks other languages" ),
fill = c("skyblue", "pink1"), alpha = rep(0.5, 2), cat.pos = c(0,
0), cat.dist = rep(0.025, 2), scaled = FALSE)
20.7 + 14.6
16.5 + 4.2 + 10.4
100 - 31.1
right_side
# If A and B represent events from two different and independent processes, then the probability that both A and B occur can be calculated as the product of their separate probabilities:
# P (A and B) = P (A) × P (B)
# P(below poverty line & speaks foriegn language)
left_side = 0.042
right_side = 0.146 * 0.207
right_side
# If A and B represent events from two different and independent processes, then the probability that both A and B occur can be calculated as the product of their separate probabilities:
# P (A and B) = P (A) × P (B)
# P(below poverty line & speaks foriegn language)
0.042 == 0.146 * 0.207
setwd("~/Desktop/MSDS_2019/Fall2019/statistics_606/week_3/Homework_3")
![table](/table.png)
((108 + 114) - 78) / 204
# P(male with blue eyes & female with blue eyes)
78/114
19/54
11/36
114/204 == 108/204
(28/95) * (59/94)
(72/95) * (13/94)
(72/95) * (28/94)
(72/95) * (28/95)
bag_charge
bag_charge <- matrix(c(0, 25, 35), ncol = 5, byrow = TRUE)
colnames(bag_charge) <- c("i", "0_bag", "1_bag", "2_bag", "total")
rownames(bag_charge) <- c("yi", "P(Y)", "yi(P(Y))", "yi(P(Y))^2", "yi(P(Y))^2 * P(Y)")
bag_charge <- matrix(c(0, 25, 35), ncol = 3, byrow = TRUE)
colnames(bag_charge) <- c("i", "0_bag", "1_bag", "2_bag", "total")
bag_charge <- matrix(c(0, 25, 35, 0, 0), ncol = 5, byrow = TRUE)
colnames(bag_charge) <- c("i", "0_bag", "1_bag", "2_bag", "total")
rownames(bag_charge) <- c("yi", "P(Y)", "yi(P(Y))", "yi(P(Y))^2", "yi(P(Y))^2 * P(Y)")
bag_charge <- matrix(c(0, 25, 35, 0, 0), ncol = 5, byrow = TRUE)
colnames(bag_charge) <- c("i", "0_bag", "1_bag", "2_bag", "total")
#rownames(bag_charge) <- c("yi", "P(Y)", "yi(P(Y))", "yi(P(Y))^2", "yi(P(Y))^2 * P(Y)")
bag_charge <- as.table(bag_charge)
bag_charge
bag_charge <- matrix(c(0, 25, 60, 0, 0), ncol = 5, byrow = TRUE)
colnames(bag_charge) <- c("i", "0_bag", "1_bag", "2_bag", "total")
#rownames(bag_charge) <- c("yi", "P(Y)", "yi(P(Y))", "yi(P(Y))^2", "yi(P(Y))^2 * P(Y)")
bag_charge <- as.table(bag_charge)
bag_charge
bag_charge <- matrix(c(0, 0, 25, 60, 0), ncol = 5, byrow = TRUE)
colnames(bag_charge) <- c("i", "0_bag", "1_bag", "2_bag", "total")
#rownames(bag_charge) <- c("yi", "P(Y)", "yi(P(Y))", "yi(P(Y))^2", "yi(P(Y))^2 * P(Y)")
bag_charge <- as.table(bag_charge)
bag_charge
bag_charge <- matrix(c("0", "0", "$25", "$60", "0"), ncol = 5, byrow = TRUE)
colnames(bag_charge) <- c("i", "0_bag", "1_bag", "2_bag", "total")
#rownames(bag_charge) <- c("yi", "P(Y)", "yi(P(Y))", "yi(P(Y))^2", "yi(P(Y))^2 * P(Y)")
bag_charge <- as.table(bag_charge)
bag_charge
bag_charge <- matrix(c("0", "0", "$25", "$60", "0"), ncol = 5, byrow = TRUE)
colnames(bag_charge) <- c("i", "0_bag", "1_bag", "2_bag", "total")
rownames(bag_charge) <- c("yi", "P(Y)", "yi(P(Y))", "yi(P(Y))^2", "yi(P(Y))^2 * P(Y)")
bag_charge <- matrix(c("0", "0", "$25", "$60", "0"), ncol = 5, byrow = TRUE)
colnames(bag_charge) <- c("i", "0_bag", "1_bag", "2_bag", "total")
rownames(bag_charge) <- c("yi", "P(Y)", "yi(P(Y))", "yi(P(Y))^2", "yi(P(Y))^2 * P(Y)")
bag_charge <- matrix(c("0", "0", "$25", "$60", "0"), ncol = 5, byrow = TRUE)
colnames(bag_charge) <- c("i", "0_bag", "1_bag", "2_bag", "total")
#rownames(bag_charge) <- c("yi", "P(Y)", "yi(P(Y))", "yi(P(Y))^2", "yi(P(Y))^2 * P(Y)")
bag_charge <- as.table(bag_charge)
bag_charge
bag_charge <- c(0, 1, 2)
colnames(bag_charge) <- c("0_bag", "1_bag", "2_bag")
bag_charge
bag_num <- c(0, 1, 2)
bag_0 <- 0
bag_1 <- 25
bag_2 <- bag_1 + 10
bag_charge <- c(bag_0, bag_1, bag_2)
bag_charge
bag_percent <- c(0.54, 0.34, 0.12)
bag_rev
bag_num <- c(0, 1, 2)
bag_0 <- 0
bag_1 <- 25
bag_2 <- bag_1 + 10
bag_charge <- c(bag_0, bag_1, bag_2)
bag_percent <- c(0.54, 0.34, 0.12)
bag_rev <- sum(bag_charge * bag_percent)
bag_rev
bag_sd
# standard deviation
bag_sd <- sd(bag_charge, na.rm = FALSE)
bag_sd
var(bag_rev)
var(bag_charge)
var(bag_percent)
var(bag_charge)
bag_var
bag_var <- var(bag_charge)
bag_var
# standard deviation
bag_sd <- sd(bag_charge, na.rm = FALSE)
bag_sd
# standard deviation
bag_sd <- sqrt(var(bag_charge))
bag_sd
expected_rev <- 120 * 12.7
expected_rev <- 120 * 12.7
expected_rev <- 120 * 12.7
expected_rev <- 120 * 12.7
expected_rev
standard_deviation <- bag_sd
standard_deviation
standard_deviation <- (bag_rev + bag_sd) * 120
standard_deviation <- (bag_rev + bag_sd) * 120
standard_deviation
knitr::opts_chunk$set(echo = TRUE)
ave_rev
mean <- 0*.54 + 25*.34 + (25+35)*.12 #average revenue
sd <- sqrt(0^2*.54 + 25^2*.34 + 60^2*.12) #standard deviation
ave_rev <- mean
ave_rev
sd
sd <- sqrt(0^2*.54 + 25^2*.34 + 60^2*.12) #standard deviation
sd
expected_rev <- 120 * mean
expected_rev
standard_deviation <- sqrt(120 * sd^2)
standard_deviation
bar_plot <- bar_plot(gender_income$total)
income_plot <- bar_plot(gender_income$total)
income_plot <- bar_plot(gender_income$total)
gender_income <- data.frame(income = c("1-9,999 or loss", "10,000-14,999", "15,000-24,999", "25,000-34,999", "35,000-49,999", "50,000-64,999", "65,000-74,999", "75,000-99,999", "100,000 or more"), total = c(0.022, 0.047, 0.158, 0.183, 0.212, 0.139, 0.058, 0.084, 0.097))
income_plot <- bar_plot(gender_income$total)
income_plot <- barplot(gender_income$total)
income_plot <- boxplot(gender_income$total)
gender_income <- data.frame(income = c("1-9,999 or loss", "10,000-14,999", "15,000-24,999", "25,000-34,999", "35,000-49,999", "50,000-64,999", "65,000-74,999", "75,000-99,999", "100,000 or more"), total = c(0.022, 0.047, 0.158, 0.183, 0.212, 0.139, 0.058, 0.084, 0.097))
income_plot <- barplot(gender_income$total)
income_plot <- barplot(gender_income$total) + geom_bar()
income_plot <- barplot(gender_income$total) + geom_bar()
income_plot <- barplot(gender_income$total)
barplot(gender_income$total)
barplot(gender_income$total, main="Income distribution",
xlab="Income ranges")
barplot(gender_income$total, main="Income distribution",
xlab="Income ranges", ylab = "total percentage")
barplot(gender_income$total, main="Income distribution",
xlab="Income ranges", ylab = "total percentage", labels = income_gender$Income)
barplot(gender_income$total, main="Income distribution",
xlab="Income ranges", ylab = "total percentage", labels = income_gender$Income)
barplot(gender_income$total, main="Income distribution",
xlab="Income ranges", ylab = "total percentage", labels = gender_income$Income)
gender_income <- data.frame(income = c("1-9,999 or loss", "10,000-14,999", "15,000-24,999", "25,000-34,999", "35,000-49,999", "50,000-64,999", "65,000-74,999", "75,000-99,999", "100,000 or more"), total = c(0.022, 0.047, 0.158, 0.183, 0.212, 0.139, 0.058, 0.084, 0.097))
barplot(gender_income$total, main="Income distribution",
xlab="Income ranges", ylab = "total percentage", labels = gender_income$Income)
gender_income <- data.frame(income = c("1-9,999 or loss", "10,000-14,999", "15,000-24,999", "25,000-34,999", "35,000-49,999", "50,000-64,999", "65,000-74,999", "75,000-99,999", "100,000 or more"), total = c(0.022, 0.047, 0.158, 0.183, 0.212, 0.139, 0.058, 0.084, 0.097))
barplot(gender_income$total, main="Income distribution",
ylab = "total percentage", labels = gender_income$Income)
axis(1, at = counts, labels = gender_income$income)
counte <- barplot(gender_income$total)
axis(1, at = counts, labels = gender_income$income)
counts <- barplot(gender_income$total)
axis(1, at = counts, labels = gender_income$income)
gender_income <- data.frame(income = c("1-9,999 or loss", "10,000-14,999", "15,000-24,999", "25,000-34,999", "35,000-49,999", "50,000-64,999", "65,000-74,999", "75,000-99,999", "100,000 or more"), total = c(0.022, 0.047, 0.158, 0.183, 0.212, 0.139, 0.058, 0.084, 0.097))
counts <- barplot(gender_income$total)
axis(1, at = counts, labels = gender_income$income)
.02 + .047 + .158 + .183 + .212
less_50
less_50 <- .02 + .047 + .158 + .183 + .212
less_50
less_50_f <- less_50 * 0.41
less_50_f <- less_50 * 0.41
```{r}
less_50_f
#counts <- barplot(gender_income$total)
#axis(1, at = counts, labels = gender_income$income)
barplot(gender_income$total, names.arg = income)
gender_income <- data.frame(income = c("1-9,999 or loss", "10,000-14,999", "15,000-24,999", "25,000-34,999", "35,000-49,999", "50,000-64,999", "65,000-74,999", "75,000-99,999", "100,000 or more"), total = c(0.022, 0.047, 0.158, 0.183, 0.212, 0.139, 0.058, 0.084, 0.097))
#counts <- barplot(gender_income$total)
#axis(1, at = counts, labels = gender_income$income)
barplot(gender_income$total, names.arg = income)
gender_income <- data.frame(income = c("1-9,999 or loss", "10,000-14,999", "15,000-24,999", "25,000-34,999", "35,000-49,999", "50,000-64,999", "65,000-74,999", "75,000-99,999", "100,000 or more"), total = c(0.022, 0.047, 0.158, 0.183, 0.212, 0.139, 0.058, 0.084, 0.097))
#counts <- barplot(gender_income$total)
#axis(1, at = counts, labels = gender_income$income)
barplot(gender_income$total, names.arg = income)
gender_income <- data.frame(income = c("1-9,999 or loss", "10,000-14,999", "15,000-24,999", "25,000-34,999", "35,000-49,999", "50,000-64,999", "65,000-74,999", "75,000-99,999", "100,000 or more"), total = c(0.022, 0.047, 0.158, 0.183, 0.212, 0.139, 0.058, 0.084, 0.097))
counts <- barplot(gender_income$total)
axis(1, at = counts, labels = gender_income$income)
