subtitle="Top destinations for migrats population - more than 3.5M for 2019 interval") +
theme_classic()
#replace NA <- 0
merged_age[is.na(merged_age)] <- 0
top_migrant_countries <- merged_age %>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey") & year %in% c(2010, 2015,2019) & age != 0) %>%
select(destination_country, age, total_population, year)%>%
arrange(desc(total_population))
top_migrant_countries
ggplot(top_migrant_countries, aes(x=age, y=total_population, fill = age)) +
geom_bar(stat="identity") +
geom_text(aes(label=total_population), position=position_dodge(width = 0.9), vjust=-0.25)
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~year) +
theme_light()
ggplot(top_migrant_countries, aes(x=age, y=total_population, fill = age)) +
geom_bar(stat="identity",position=position_nudge()) +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~year) +
theme_light()
#replace NA <- 0
merged_age[is.na(merged_age)] <- 0
top_migrant_countries <- merged_age %>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey") & year %in% c(2010, 2015,2019) & age != 0) %>%
select(destination_country, age, total_population, year)%>%
arrange(desc(total_population))
top_migrant_countries
ggplot(top_migrant_countries, aes(x=age, y=total_population, fill = age)) +
geom_bar(stat="identity",position=position_nudge()) +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~year) +
theme_light()
#replace NA <- 0
merged_age[is.na(merged_age)] <- 0
top_migrant_countries <- merged_age %>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey") & year %in% c(2010, 2015,2019) & age != 0) %>%
select(destination_country, age, total_population, year)%>%
arrange(desc(total_population))
top_migrant_countries
ggplot(top_migrant_countries, aes(x=age, y=total_population, fill = destination_country)) +
geom_bar(stat="identity",position=position_nudge()) +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~year) +
theme_light()
#replace NA <- 0
merged_age[is.na(merged_age)] <- 0
top_migrant_countries <- merged_age %>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey") & year %in% c(2010, 2015,2019) & age != 0) %>%
select(destination_country, age, total_population, year)%>%
arrange(desc(total_population))
top_migrant_countries
ggplot(top_migrant_countries, aes(x=age, y=total_population, fill = destination_country)) +
geom_bar(stat="identity",position=position_dodge()) +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~year) +
theme_light()
#replace NA <- 0
merged_age[is.na(merged_age)] <- 0
top_migrant_countries <- merged_age %>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Ukraine", "Turkey", "Russian Federation", "India") & year %in% c(2010, 2015,2019) & age != 0) %>%
select(destination_country, age, total_population, year)%>%
arrange(desc(total_population))
top_migrant_countries
ggplot(top_migrant_countries, aes(x=age, y=total_population, fill = destination_country)) +
geom_bar(stat="identity",position=position_dodge()) +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~year) +
theme_light()
best_3 <- merged_age%>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey") & year == "2019") %>%
select(destination_country, age, total_population)%>%
arrange(desc(total_population))
best_3
ggplot(best_3, aes(x=age, y=total_population, fill = destination_country)) +
geom_bar(stat="identity",position=position_dodge()) +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~year) +
theme_light()
best_3 <- merged_age%>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey") & year == "2019") %>%
select(destination_country, age, total_population)%>%
arrange(desc(total_population))
best_3
ggplot(best_3, aes(x=age, y=total_population, fill = destination_country)) +
geom_bar(stat="identity",position=position_dodge()) +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
theme_light()
theme_light()
best_3 <- merged_age%>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey") & year == "2019") %>%
select(destination_country, age, total_population)%>%
arrange(desc(total_population))
best_3
ggplot(best_3, aes(x=age, y=total_population, fill = destination_country)) +
geom_bar(stat="identity",position=position_dodge()) +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~ age)
theme_light()
best_3 <- merged_age%>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey") & year == "2019") %>%
select(destination_country, age, total_population)%>%
arrange(desc(total_population))
best_3
ggplot(best_3, aes(x=age, y=total_population, fill = destination_country)) +
geom_bar(stat="identity",position=position_dodge()) +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~ destination_country)
theme_light()
best_3 <- merged_age%>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey") & year == "2019") %>%
select(destination_country, age, total_population)%>%
arrange(desc(total_population))
best_3
ggplot(best_3, aes(x=age, y=total_population, fill = destination_country)) +
geom_bar(stat="identity",position=position_dodge()) +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~ destination_country) +
theme_light()
best_3 <- merged_age%>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey") & year == "2019") %>%
select(destination_country, age, total_population)%>%
arrange(desc(total_population))
best_3
ggplot(best_3, aes(x=age, y=total_population, fill = destination_country)) +
geom_bar(stat="identity",position=position_dodge()) +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~ age) +
theme_light()
best_3 <- merged_age%>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey") & year == "2019") %>%
select(destination_country, age, total_population)%>%
arrange(desc(total_population))
best_3
ggplot(best_3, aes(x=age, y=total_population, fill = age)) +
geom_bar(stat="identity",position=position_dodge()) +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~ destination_country) +
theme_light()
best_3 <- merged_age%>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey") & year == "2019" & age != 0) %>%
select(destination_country, age, total_population)%>%
arrange(desc(total_population))
best_3
ggplot(best_3, aes(x=age, y=total_population, fill = age)) +
geom_bar(stat="identity",position=position_dodge()) +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~ destination_country) +
theme_light()
#replace NA <- 0
merged_age[is.na(merged_age)] <- 0
top_migrant_countries <- merged_age %>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Ukraine", "Turkey", "Russian Federation", "India") & year %in% c(2010, 2015,2019) & age != 0) %>%
select(destination_country, age, total_population, year)%>%
arrange(desc(total_population))
top_migrant_countries
ggplot(top_migrant_countries, aes(x=age, y=total_population, fill = destination_country)) +
geom_point() +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~year) +
theme_light()
ggplot(top_migrant_countries, aes(x=age, y=total_population, fill = destination_country)) +
geom_boxplot() +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~year) +
theme_light()
ggplot(top_migrant_countries, aes(x=age, y=total_population, fill = destination_country)) +
geom_jitter() +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~year) +
theme_light()
ggplot(top_migrant_countries, aes(x=age, y=total_population, fill = destination_country)) +
geom_line() +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~year) +
theme_light()
ggplot(top_migrant_countries, aes(x=age, y=total_population, fill = destination_country)) +
geom_bar((stat="identity",position=position_dodge())) +
ggplot(top_migrant_countries, aes(x=age, y=total_population, fill = destination_country)) +
geom_bar(stat="identity",position=position_dodge()) +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~year) +
theme_light()
ggplot(top_migrant_countries, aes(x=age, y=total_population, fill = destination_country)) +
geom_bar(stat="identity",position=position_dodge()) +
geom_abline() +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~year) +
theme_light()
ggplot(top_migrant_countries, aes(x=age, y=total_population, fill = destination_country)) +
geom_bar(stat="identity",position=position_dodge()) +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~year) +
theme_light()
best_3 <- merged_age%>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey") & year == "2019" & age != 0) %>%
select(destination_country, age, total_population)%>%
arrange(desc(total_population))
best_3
ggplot(best_3, aes(x=age, y=total_population, fill = age)) +
geom_bar(stat="identity",position=position_dodge()) +
labs(title="Migrant age-categories distribution over the countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~ destination_country) +
theme_light()
best_3 <- merged_age%>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey") & year %in% c("2015", "2019") & age != 0) %>%
select(destination_country, age, total_population, year)%>%
arrange(desc(total_population))
best_3
ggplot(best_3, aes(x=age, y=total_population, fill = age)) +
geom_bar(stat="identity",position=position_dodge()) +
labs(title="Migrant age-categories distribution over the countries",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~ destination_country) +
theme_light()
g <- ggplot(best_3, aes(year))
g + geom_density(aes(fill=factor(destination_country)), alpha=0.8) +
labs(title="Density plot",
subtitle="City Mileage Grouped by Number of cylinders",
caption="Source: mpg",
x="City Mileage",
fill="# Cylinders")
best_3 <- merged_age%>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey") & year %in% c("2005","2010","2015", "2019") & age != 0) %>%
select(destination_country, age, total_population, year)%>%
arrange(desc(total_population))
best_3
ggplot(best_3, aes(x=age, y=total_population, fill = age)) +
geom_bar(stat="identity",position=position_dodge()) +
labs(title="Migrant age-categories distribution over the countries",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~ destination_country) +
theme_light()
g <- ggplot(best_3, aes(year))
g + geom_density(aes(fill=factor(destination_country)), alpha=0.8) +
labs(title="Density plot",
subtitle="City Mileage Grouped by Number of cylinders",
caption="Source: mpg",
x="City Mileage",
fill="# Cylinders")
best_3 <- merged_age%>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Turkey") & year %in% c("2019") & age != 0) %>%
select(destination_country, age, total_population, year)%>%
arrange(desc(total_population))
best_3
ggplot(best_3, aes(x=age, y=total_population, fill = age)) +
geom_bar(stat="identity",position=position_dodge()) +
labs(title="Migrant age-categories distribution over the countries",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~ destination_country) +
theme_light()
file_to_export <- write.table(by_age, file = "migrantByAge.csv", row.names = FALSE, na="", col.names = TRUE, sep = ",")
file_test("-f", "~/Desktop/MSDS_2019/Fall2019/aquisition&management_607/week_6/project_2/migrantByAge.csv")
file_to_open <- read.csv(file = "migrantByAge.csv", header = TRUE, sep = ",")
file_to_open
file_to_export <- write.table(clean_country_df, file = "migrantByOriginDestination.csv", row.names = FALSE, na="", col.names = TRUE, sep = ",")
file_test("-f", "~/Desktop/MSDS_2019/Fall2019/aquisition&management_607/week_6/project_2/migrantByOriginDestination.csv")
file_to_open <- read.csv(file = "migrantByOriginDestination.csv", header = TRUE, sep = ",")
file_to_open
library(readr)
UN_migrant_total <- read_csv("UN_MigrantStockTotal_2019/Table 1-Table 1.csv",
skip = 15)
UN_migrant_total
UN_migrant_total
colnames(UN_migrant_total)
library(readr)
UN_migrant_total <- read_csv("UN_MigrantStockTotal_2019/Table 1-Table 1.csv",
skip = 14)
UN_migrant_total
#replace NA <- 0
merged_age[is.na(merged_age)] <- 0
top_migrant_countries <- merged_age %>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Ukraine", "Turkey", "Russian Federation", "India") & year %in% c(2010, 2015,2019) & age != 0) %>%
select(destination_country, age, total_population, year)%>%
arrange(desc(total_population))
top_migrant_countries
ggplot(top_migrant_countries, aes(x=age, y=total_population, fill = destination_country)) +
geom_bar(stat="identity",position=position_dodge()) +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~year) +
theme_light() +
geom_text(aes(label = total_population),
hjust = 1.5,
color = "white",
size = 3) +
theme_classic()
#replace NA <- 0
merged_age[is.na(merged_age)] <- 0
top_migrant_countries <- merged_age %>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Ukraine", "Turkey", "Russian Federation", "India") & year %in% c(2010, 2015,2019) & age != 0) %>%
select(destination_country, age, total_population, year)%>%
arrange(desc(total_population))
top_migrant_countries
ggplot(top_migrant_countries, aes(x=age, y=total_population, fill = destination_country)) +
geom_bar(stat="identity",position=position_dodge()) +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~year) +
theme_light()
library(readr)
UN_Refugee_df <- read_csv("UN_MigrantStockTotal_2019/Table 6-Table 1.csv",
col_types = cols(`1990_1` = col_skip()),
skip = 15)
View(UN_Refugee_df)
library(readr)
UN_Refugee_df <- read_csv("UN_MigrantStockTotal_2019/Table 6-Table 1.csv"),
library(readr)
UN_Refugee_df <- read_csv("UN_MigrantStockTotal_2019/Table 6-Table 1.csv",
skip = 15)
UN_Refugee_df
library(readr)
UN_Refugee_df <- read_csv("UN_MigrantStockTotal_2019/Table 6-Table 1.csv",
skip = 14)
UN_Refugee_df
library(readr)
UN_Refugee_df <- read_csv("UN_MigrantStockTotal_2019/Table 6-Table 1.csv",
skip = 14)
UN_Refugee_df
library(readr)
Table_6_Table_1 <- read_csv("UN_MigrantStockTotal_2019/Table 6-Table 1.csv",
skip = 14)
View(Table_6_Table_1)
library(readr)
UN_Refugee_df <- read_csv("UN_MigrantStockTotal_2019/Table 6-Table 1.csv",
skip = 14)
UN_Refugee_df
library(readr)
UN_Refugee_df <- read_csv("UN_MigrantStockTotal_2019/Table 6-Table 1.csv",
skip = 15)
UN_Refugee_df
refugee_df <- UN_Refugee_df %>%
select(-c(3:5))
refugee_df
#Use select function to fetch only the data that we interested by picking the colnames
estimate_refugee_df <- refugee_df %>%
select(c("X1":"2019"))
estimate_refugee_df
UN_Countries_age <- filter(UN_Migrant_age ,!is.na(X6))
UN_Countries_age
refugee_country_df <- filter(UN_Refugee_df ,!is.na(X5))
refugee_country_df
refugee_df <- UN_Refugee_df %>%
select(-c(3:5))
refugee_df
refugee_df <- refugee_country_df %>%
select(-c(3:5))
refugee_df
#Use select function to fetch only the data that we interested by picking the colnames
estimate_refugee_df <- refugee_df %>%
select(c("X1":"2019"))
estimate_refugee_df
refugee_df <- refugee_country_df %>%
select(-X1,-c(3:5))
refugee_df
#Use select function to fetch only the data that we interested by picking the colnames
estimate_refugee_df <- refugee_df %>%
select(c("X1":"2019"))
#Use select function to fetch only the data that we interested by picking the colnames
estimate_refugee_df <- refugee_df %>%
select(c("X2":"2019"))
estimate_refugee_df
estimate_refugee_rename <- estimate_refugee_df %>%
rename(
destination_country = X1,
)
estimate_refugee_rename <- estimate_refugee_df %>%
rename(
destination_country = X2,
)
estimate_refugee_rename
num_est_refugee <- estimate_refugee_rename
num_est_refugee$`1990` <- parse_number(num_est_refugee$`1990`)
num_est_refugee$`1995` <- parse_number(num_est_refugee$`1995`)
num_est_refugee$`2000` <- parse_number(num_est_refugee$`2000`)
num_est_refugee$`2005` <- parse_number(num_est_refugee$`2005`)
num_est_refugee$`2010` <- parse_number(num_est_refugee$`2010`)
num_est_refugee$`2015` <- parse_number(num_est_refugee$`2015`)
num_est_refugee$`2019` <- parse_number(num_est_refugee$`2019`)
num_est_refugee
#age_category <- both_sex_rename %>%
#  summarise(child = sum(c(3:6)))
by_refugee_pop <- num_est_refugee%>%
gather(year, total_estimates, c(2:8))
by_refugee_pop
by_refugee_pop <- num_est_refugee%>%
gather(year, total_estimates, c(2:8)) %>%
arrange(desc(total_estimates))
by_refugee_pop
Refugee_estimates <- write.table(by_refugee_pop, file = "refugeeEstimates.csv", row.names = FALSE, na="", col.names = TRUE, sep = ",")
file_test("-f", "~/Desktop/MSDS_2019/Fall2019/aquisition&management_607/week_6/project_2/refugeeEstimates.csv")
refugeeEstimates <- read.csv(file = "refugeeEstimates.csv", header = TRUE, sep = ",")
refugeeEstimates
refugeeEstimates <- read.csv(file = "refugeeEstimates.csv", header = TRUE, sep = ",")
refugeeEstimates
knitr::opts_chunk$set(echo = TRUE)
num_age_df <- both_sex_rename
num_age_df$`0-4` <- parse_number(num_age_df$`0-4`)
num_age_df$`5-9` <- parse_number(num_age_df$`5-9`)
num_age_df$`10-14` <- parse_number(num_age_df$`10-14`)
num_age_df$`15-19` <- parse_number(num_age_df$`15-19`)
num_age_df$`20-24` <- parse_number(num_age_df$`20-24`)
num_age_df$`25-29` <- parse_number(num_age_df$`25-29`)
num_age_df$`30-34` <- parse_number(num_age_df$`30-34`)
num_age_df$`35-39` <- parse_number(num_age_df$`35-39`)
num_age_df$`40-44` <- parse_number(num_age_df$`40-44`)
num_age_df$`45-49` <- parse_number(num_age_df$`45-49`)
num_age_df$`50-54` <- parse_number(num_age_df$`50-54`)
num_age_df$`55-59` <- parse_number(num_age_df$`55-59`)
num_age_df$`60-64` <- parse_number(num_age_df$`60-64`)
num_age_df$`65-69` <- parse_number(num_age_df$`65-69`)
num_age_df$`70-74` <- parse_number(num_age_df$`70-74`)
num_age_df$`75+` <- parse_number(num_age_df$`75+`)
num_age_df
#age_category <- both_sex_rename %>%
#  summarise(child = sum(c(3:6)))
num_est_refugee <- estimate_refugee_rename
num_est_refugee$`1990` <- parse_number(num_est_refugee$`1990`)
num_est_refugee$`1995` <- parse_number(num_est_refugee$`1995`)
num_est_refugee$`2000` <- parse_number(num_est_refugee$`2000`)
num_est_refugee$`2005` <- parse_number(num_est_refugee$`2005`)
num_est_refugee$`2010` <- parse_number(num_est_refugee$`2010`)
num_est_refugee$`2015` <- parse_number(num_est_refugee$`2015`)
num_est_refugee$`2019` <- parse_number(num_est_refugee$`2019`)
num_est_refugee
#age_category <- both_sex_rename %>%
#  summarise(child = sum(c(3:6)))
library(xlsx)
library(dplyr)
library(janitor)
library(xlsx)
library(dplyr)
library(janitor)
library(xlsx)
library(dplyr)
library(janitor)
library(readr)
UN_MigrantStock <- read_csv("UN_MigrantStockByOriginAndDestination_2019/Table 1-Table 1.csv",
skip = 16)
UN_MigrantStock
library(xlsx)
library(dplyr)
library(janitor)
library(readr)
UN_MigrantStock <- read_csv("UN_MigrantStockByOriginAndDestination_2019/Table 1-Table 1.csv",
skip = 16)
UN_MigrantStock
library(readr)
UN_MigrantStock <- read_csv("UN_MigrantStockByOriginAndDestination_2019/Table 1-Table 1.csv",
skip = 16)
UN_MigrantStock
#replace NA <- 0
merged_age[is.na(merged_age)] <- 0
top_migrant_countries <- merged_age %>%
filter(destination_country %in% c("United States of America", "United Arab Emirates", "Ukraine", "Turkey", "Russian Federation", "India") & year %in% c(2010, 2015,2019) & age != 0) %>%
select(destination_country, age, total_population, year)%>%
arrange(desc(total_population))
top_migrant_countries
ggplot(top_migrant_countries, aes(x=age, y=total_population, fill = destination_country)) +
geom_bar(stat="identity",position=position_dodge()) +
labs(title="Migrant age-categories during 3 intervals",
subtitle="Top migrats age-categories for the top 6 destination countries") +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
facet_wrap(~year) +
theme_light()
